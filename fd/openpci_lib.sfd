* This SFD file was automatically generated by fd2sfd from
* fd/openpci_lib.fd and
* clib/openpci_protos.h.
==base _OpenPciBase
==basetype struct Library *
==libname openpci.library
==include <exec/types.h>
==include <exec/interrupts.h>
==include <utility/tagitem.h>
==include <devices/timer.h>
* Return the bus type found
==bias 30
==public
unsigned short pci_bus() ()
* IN/OUT Function for PCI Bus
* Byte (8bits) Read/Write
unsigned char pci_inb(unsigned long address) (a0)
void pci_outb(unsigned char value, unsigned long address) (d0,a0)
* Word (16bits) Read/Write
unsigned short pci_inw(unsigned long address) (a0)
void pci_outw(unsigned short value, unsigned long address) (d0,a0)
* Long (32bits) Read/Write
unsigned long pci_inl(unsigned long address) (a0)
void pci_outl(unsigned long value, unsigned long address) (d0,a0)
* Amiga Mem and Pci Mem Read/Write (must be a multiple of 8bytes)
void pci_to_hostcpy(void * pcimemsrc, void * memdest, unsigned long packetsize) (a0,a1,d0)
void host_to_pcicpy(void * memsrc, void * pcimemdest, unsigned long packetsize) (a0,a1,d0)
void pci_to_pcicpy(void * pcimemsrc, void * pcimemdest, unsigned long packetsize) (a0,a1,d0)
* Pci Find Functions
struct  pci_dev * pci_find_device(unsigned short vendor, unsigned short device, struct pci_dev * pcidev) (d0,d1,a0)
struct  pci_dev * pci_find_class(unsigned long class, struct  pci_dev * pcidev) (d0,a0)
struct  pci_dev * pci_find_slot(unsigned char bus, unsigned long devfn) (d0,d1)
* Pci Bus Read/Write Config functions
unsigned char pci_read_config_byte(unsigned char registernum, struct  pci_dev * pcidev) (d0,a0)
unsigned short pci_read_config_word(unsigned char registernum, struct  pci_dev * pcidev) (d0,a0)
unsigned long pci_read_config_long(unsigned char registernum, struct  pci_dev * pcidev) (d0,a0)
void pci_write_config_byte(unsigned char registernum, unsigned char val, struct  pci_dev * pcidev) (d0,d1,a0)
void pci_write_config_word(unsigned char registernum, unsigned short val, struct  pci_dev * pcidev) (d0,d1,a0)
void pci_write_config_long(unsigned char registernum, unsigned long val, struct  pci_dev * pcidev) (d0,d1,a0)
* Pci Set Bus Master
BOOL pci_set_master(struct  pci_dev * pcidev) (a0)
* Interrupt functions
BOOL pci_add_intserver(struct Interrupt * PciInterrupt, struct pci_dev * pcidev) (a0,a1)
void pci_rem_intserver(struct Interrupt * PciInterrupt, struct pci_dev * pcidev) (a0,a1)
* Pci Alloc/Free DMA memory
APTR pci_allocdma_mem(unsigned long size, unsigned long flags) (d0,d1)
void pci_freedma_mem(APTR buffer, unsigned long size) (a0,d0)
* Logic<->Physic Addr conversion
APTR pci_logic_to_physic_addr(APTR PciLogicalAddr, struct pci_dev * pcidev) (a0,a1)
APTR pci_physic_to_logic_addr(APTR PciPhysicalAddr, struct pci_dev * pcidev) (a0,a1)
* Obtain/Release PCI card
BOOL pci_obtain_card(struct pci_dev * pcidev) (a0)
void pci_release_card(struct pci_dev * pcidev) (a0)
==end
